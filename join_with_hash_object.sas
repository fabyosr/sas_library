DATA TMP_SMALL_TABLE; * CREATE A SMALL TABLE OF PRODUCTS;
INFILE DATALINES DLM=',';
INPUT ID_PRODUCT PRODUCT :$10. PRICE ; * : IS FOR DATALINES WITH VARYING LENGTH;
DATALINES;
1,SKATE,200.25
2,SURFBOARD,350.75
3,COMPUTER,780.99
4,SMARTWATCH,300.00
5,SMARTPHONE,999.99
;
RUN;

%MACRO RAND_BETWEEN(MIN, MAX); /* CREATE MACRO TO GENEREATE A RANGE RANDOM NUMBER; */
   (&MIN + FLOOR((1+&MAX-&MIN)*RAND("UNIFORM")));
%MEND;

DATA TMP_BIG_TABLE; * CREATE A BIG TABLE OF PRODUCTS SALE;
  DO ID_SALE=1 TO 1000000;
     ID_PRODUCT = %RAND_BETWEEN(1,5);     
     OUTPUT;
  END;
RUN;

DATA TMP_JOIN_SMALL_BIG (COMPRESS=CHAR BUFSIZE=2048K); * CREATE TABLE USING HASH;
  IF 0 THEN SET TMP_SMALL_TABLE; /* SMALL HASH TABLE */
  DECLARE HASH HT (DATASET: 'TMP_SMALL_TABLE'); /* DECLARE THE NAME CLIENTE FOR HASH */
  HT.DEFINEKEY ('ID_PRODUCT'); /* IDENTIFY FIELDS TO USE AS KEYS */
  HT.DEFINEDATA ('PRODUCT'); /* IDENTIFY FIELDS TO USE AS DATA */
  HT.DEFINEDATA ('PRICE'); /* IDENTIFY FIELDS TO USE AS DATA */
  HT.DEFINEDONE (); /* COMPLETE HASH TABLE DEFINITION */

  DO UNTIL (EOF2) ; /* LOOP TO READ RECORDS FROM BIG TABLE */
     SET TMP_BIG_TABLE END = EOF2;
     CALL MISSING(PRODUCT); /* INITIALIZES VARIABLE TO BE COMPLETED */
     CALL MISSING(PRICE); /* INITIALIZES VARIABLE TO BE COMPLETED */
     IF HT.FIND(KEY:ID_PRODUCT)=0 THEN OUTPUT; /* LOOKUP EACH ID_PROCUCT IN HASH PLAN */
  END;
  STOP;
RUN;

